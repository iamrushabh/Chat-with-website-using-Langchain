{"file_name": "botpenguin.com_glossary_dynamic-link", "text": "URL: https://botpenguin.com/glossary/dynamic-link\nDynamic Link: Advantages and Challenges | BotPenguin\nWhy BotPenguin\nProduct\nSolutions\nPricing\nPartners\nResources\nLogin\nGet Started FREE\nIntegrations\nExperience 80+ world-class integrations.\nKey Features\nTake your business to the next level with our awesome key features.\nLive Chat\nStay in the loop with your clientele 24*7!\nUnified Inbox\nServe your customers across all platforms.\nAnalytics\nSpeedtrack your growth with our top-of-the-line analytics tools!\nMobile App\nMake, monitor, & manage your AI chatbots with our mobile app.\nCHATBOT COMPARISONS\nBotPenguin vs. Manychat\nBotPenguin vs. Tidio\nBotPenguin vs. Tawk.to\nBotPenguin vs. Wati\nBotPenguin vs. Interakt\nBotPenguin vs. AiSensy\nBotPenguin vs. Landbot\nWHAT CAN IT DO?\nMarketing Automation\nMake marketing a boon from the automation gods!\nFB Automation\nEngage with your customers on a deeper level.\nWhatsApp Automation\nGet that nifty automation for WhatsApp too!\nAppointment Bookings\nNo more delays, BotPenguin\u2019s got you here!\nCustomer Support\nYour customers are in for a treat with this automation.\nLead Generation\nGain more lead without any extra effort or expenses\nWHO CAN USE IT?\nHealthcare\nGive your patients world-class healthcare service!\nEducation\nMake admissions and automate processes in a jiffy!\nE-commerce\nCreate the best E-commerce service with ease!\nReal Estate\nMake Real Estate great again with BotPenguin!\nConsultants\nBoost up with our one-stop marketing solution!\nSaaS\nTake your SAAS game to the next level with BotPenguin!\nTours & Travels\nProvide extraordinary tour and travel services with BotPenguin!\nInsurance\nLaunch AI-driven Insurance Bot to Promote, Sell, & Manage Policies.\nWHERE CAN IT RUN?\nInstagram Chatbot\nAttract leads, boost sales, and chat 24/7 with Instagram Chatbots.\nWhatsApp Chatbot\nStart conversing like a real person with BotPenguin!\nTelegram Chatbot\nCutting-edge features for you to grow your business on Telegram.\nFacebook Chatbot\nDo everything at once with BotPenguin on Facebook.\nWebsites Chatbot\nBotPenguin grows your website and keeps your customers engaged.\nWordpress Chatbot\nBotPenguin thrives on WordPress and makes it awesome.\nMicrosoft Teams Chatbot\nMaximize your teams productivity with MS Teams Bot.\nShopify Chatbot\nBoost your Shopify Business With BotPenguin\u2019s AI-powered chatbot.\nWooCommerce Chatbot\nSell effortlessly on your WooCommerce store with BotPenguin.\nSquarespace Chatbot\nGet the most out of Squarespace with BotPenguin\nCUSTOM DEVELOPMENT\nWhitelabel ChatGPT\nApply your branding on ChatGPT, Launch your own AI platform\nChatGPT Custom Plugins\nIntegrate your service straight into ChatGPT\nCustom Chatbot Development\nBuild enterprise-grade chatbots with the best\nChatGPT Clone\nAdd functionality and branding on ChatGPT\nHIRE DEVELOPERS\nChatbot Developers\nBuild Lighter, Faster, Smarter-Efficiently\nChatGPT Developers\nRide the GPT wave with trained surfers\nChatGPT Consultants\nAdvice that makes the difference in your AI journey\nPARTNER PROGRAMS\nPartners Home\nJoin hands with us, and welcome growth\nWhatsApp Whitelabel Partners\nConquer the WhatsApp land with BotPenguin\u2019s White Label Platform\nWhitelabel Partners\nSay hi to the best Whitelabel chatbot platform ever\nAffiliate Partners\nEarn more and keep your clients happier\nImplementation Partners\nAs they say, a partner is worth trillions!\nPARTNER PRICING\nWhitelabel Chatbot Pricing\nOur pricing for Whitelabel Chatbot\nImplementation Partnership Pricing\nOur pricing for Implementation Partnership\nOUR RESOURCES\nBlogs\nRead the latest blogs on chatbots, AI, automations & more\nVideos\nWatch tutorials, webinars, and demos to master our chatbots.\nCase Study\nRead how BotPenguin transformed business communication\nE-book\nExplore e-books written by experts for all your business needs!\nHelp Docs\nFind detailed guides and tips for all your chatbot needs.\nNewsroom\nExplore how BotPenguin is making headlines in the chatbot industry.\nCommunity Support\nJoin our vibrant community to unlock exclusive content & expert guidance\nLATEST BLOG\nWhy is BotPenguin the best platform to develop a chatbot?\nIntroducing ChatGPT 4o for BotPenguin\nCreate your first AI Chatbot\nGet Started FREE\nGLOSSARY\nDynamic Link\nTable of Contents\nWhat is Dynamic Link?\nWho Uses Dynamic Link?\nWhen and Why Dynamic Link is Implemented?\nWhere are Dynamic Link Libraries Stored?\nHow Does Dynamic Link Work?\nAdvantages of Dynamic Linking\nThe Challenges of Dynamic Linking\nBest Practices for Using Dynamic Link\nFrequently Asked Questions (FAQs)\nShare\nLink copied\nWhat is Dynamic Link?\nA dynamic link is a smart web link that can change or update its destination after it's created. Let me give you an example to make this clear.\nSay you share a link to an online document. A regular static link will always point to the original document. But with a dynamic link, if the document location changes, the link automatically updates to redirect to the new destination!\nSo even if the document is moved to a new folder or server, the dynamic link will keep working rather than break. Pretty nifty, right?\nDynamic links are also great for tracking analytics - you can see how many times a link was clicked and by who. Marketers often use dynamic links in campaigns to point to different landing pages based on the user's location, device or other attributes.\nThe key takeaway is that dynamic links stay current by auto-updating their targets. Unlike static links that break if the content is moved, dynamic ones provide a future-proof smart solution. Just set it and forget it!\nWho Uses Dynamic Link?\nSoftware developers and engineers often utilize Dynamic Link in their work. This technique is especially useful in creating modular and efficient applications, or when developing software that needs to dynamically load or unload components during execution.\nWhen and Why Dynamic Link is Implemented?\nDynamic Link comes into play when developers aim to keep their program's codebase compact, eliminating the need to include all code directly. It lends a hand in creating modular, extensible, and efficient programs. The use of Dynamic Link also aids in reducing memory consumption and enables easier application upgrades, as developers can update individual modules without altering the main program.\nWhere are Dynamic Link Libraries Stored?\nDynamic Link Libraries (DLLs), an intrinsic part of the Dynamic Link, are saved on the disk as separate files. These DLLs are loaded into memory at runtime when needed, further demonstrating the efficiency of the Dynamic Link.\nHow Does Dynamic Link Work?\nIn this section, we'll demystify the workings of dynamic linking, a process that enables different software components to communicate seamlessly.\nFacilitation of Shared Libraries\nDynamic linking enables software to use shared libraries, thereby minimizing redundancy. It loads the shared library into memory only once, which can then be utilized by any number of applications.\nOn-Demand Linking\nIn a dynamically-linked system, linking is performed at run-time, on-demand. This means that the memory and system resources are used more efficiently, as only the required components are loaded.\nEase of Software Updates\nDynamic linking facilitates simple software updates. With it, individual library modules can be updated or fixed without altering the programs that use them, ensuring seamless software maintenance.\nSystem-wide Consistency\nBy leveraging dynamic linking, it's easier to maintain system-wide consistency. Any modifications made to the shared libraries automatically reflect across all software components that utilize them.\nLesser Disk Space\nLastly, dynamic linking cuts down on disk space requirements. As the common functions are stored in shared libraries, each software piece does not need to have a copy of the same code, saving valuable disk space.\nIn essence, dynamic linking promotes software efficiency, eases up system maintenance and update tasks, and results in overall system optimization by saving on memory and disk resources.\nAdvantages of Dynamic Linking\nIn this section, we'll dive into the benefits of using dynamic linking in software development, highlighting its impact on system efficiency and performance.\nMemory Efficiency\nDynamic linking allows multiple programs to share memory space allocated to a dynamically linked library (DLL). This results in significant memory savings, improving overall system performance.\nDisk Space Conservation\nAs dynamically linked libraries (DLLs) are stored in a single location and shared among programs, dynamic linking helps reduce disk space usage. Each program doesn't need its own copy of the library, conserving disk space.\nEasier Upgrades and Bug Fixes\nWith dynamic linking, updates or bug fixes to libraries need only to be performed in one place. Programs linked to the updated DLL don't need to be recompiled or re-linked, simplifying the update process considerably.\nFlexible Program Extensions\nUsing dynamic linking, software developers can easily extend programs' functionality without modifying their source code. It encourages modular programming, highlighting the separation of concerns in software design.\nRun-Time Binding\nDynamic linking helps achieve run-time binding, allowing selection of the appropriate library version at execution time. It offers flexibility, enabling software to handle different versions of an API or hardware variations seamlessly.\nThe Challenges of Dynamic Linking\nIn this section, we'll cover the potential complications faced when using dynamic linking, a process critical in software development and execution.\nCompatibility Issues\nWith dynamic linking, libraries evolve independently. Therefore, ensuring library updates remain compatible with the application can be challenging.\nDebugging Difficulties\nDebugging can be more complicated with dynamic linking, as the integration and behavior of libraries occur at runtime, making the root cause of bugs harder to isolate.\nVersion Conflict\nApplications may require specific library versions. Mismatches between application demands and actually installed library versions could trigger system instability or application crashes.\nSecurity Vulnerabilities\nDynamic libraries could be exploited to run malicious code. Careful monitoring is necessary to ensure that libraries from trusted sources are used.\nFragmented Memory\nDynamic linking can result in fragmented memory, as each dynamically-linked library might be loaded into different segments of memory, which can reduce system performance.\nBest Practices for Using Dynamic Link\nIn this segment, we'll explore some best practices one should adhere to when working with dynamic linking to ensure optimal system performance and enhanced software efficiency.\nAvoid Duplication\nAim to use shared libraries to minimize code duplication. This not only optimizes disk space utilization but also ensures code consistency across different applications.\nForward Compatibility\nStrive for forward compatibility. Ensure that newer versions of shared libraries remain compatible with older ones. This helps prevent potential system crashes or application failures after updates.\nVersion Control\nImplement explicit version control for shared libraries. This enforces application-library compatibility and helps manage situations where different versions of the same library exist on the system.\nError Handling\nPrepare for loading errors. Equipping your application to handle scenarios where library loading fails can help maintain application stability and shows maturity in your codebase.\nLibrary Maintenance\nAccount for regular maintenance and updates. Be diligent in testing your libraries before distribution to avoid any unexpected behavior or application crash.\nThrough adhering to these best practices while using dynamic linking, one can navigate issues of system performance, software maintenance, and overall systemic efficiency more adeptly. These practices ensure your software is robust, reliable, and built on a solid foundation.\nFrequently Asked Questions (FAQs)\nWhat is a dynamic link library (DLL) and how does it work?\nA dynamic link library (DLL) is a collection of small programs that larger programs can load when needed to complete specific tasks. DLLs are separate files that are linked to a program when it is run, improving memory efficiency and allowing multiple programs to use the same library simultaneously.\nWhat are the advantages of dynamic linking and DLLs?\nDynamic linking and DLLs offer advantages such as fewer faults at runtime, memory efficiency by using shared memory pages, and a modular architecture that allows for easier application updates and component exchanges.\nWhat are the challenges of dynamic linking and DLLs?\nSome challenges of dynamic linking include the possibility of errors due to missing DLLs, potential exploits like DLL injection, and the slower linking process compared to static linking.\nHow can DLL errors be fixed?\nDLL errors can be fixed by troubleshooting the issue, restarting the computer, checking the recycle bin for accidentally deleted files, performing a malware scan, or using DLL troubleshooting tools provided by Microsoft.\nWhat is the difference between static and dynamic linking?\nStatic linking embeds libraries into the executable during compilation, while dynamic linking involves linking external DLL files to the program when it is run.\nHow do dynamic link libraries contribute to memory efficiency?\nDLLs contribute to memory efficiency by allowing files to be loaded into memory only when needed, instead of loading them along with the main program. This reduces memory usage compared to static linking where each program has its own copy of the same library.\nBuild your first AI chatbot for FREE in just 5 minutes!\nGet Started FREE\nSurprise! BotPenguin has fun blogs too\nWe know you\u2019d love reading them, enjoy and learn.\nWhat is a WhatsApp Campaign? (With Real-World Examples)\nUpdated at Nov 15, 2024\n16 min to read\nBotPenguin\nContent Writer, BotPenguin\nA Comprehensive Look at Generative AI Use Cases Across Industries\nUpdated at Nov 14, 2024\n14 min to read\nManish Goyal\nAI Technical Lead, BotPenguin\nHow Generative AI Models Help in Enhancing Chatbot Conversations\nUpdated at Nov 14, 2024\n8 min to read\nManish Goyal\nAI Technical Lead, BotPenguin\nTable of Contents\nWhat is Dynamic Link?\nWho Uses Dynamic Link?\nWhen and Why Dynamic Link is Implemented?\nWhere are Dynamic Link Libraries Stored?\nHow Does Dynamic Link Work?\nAdvantages of Dynamic Linking\nThe Challenges of Dynamic Linking\nBest Practices for Using Dynamic Link\nFrequently Asked Questions (FAQs)\nBotPenguin is the best AI Chatbot maker platform. Create a Chatbot for WhatsApp, Website, Facebook Messenger, Telegram, WordPress & Shopify with BotPenguin - 100% FREE! Our chatbot creator helps with lead generation, appointment booking, customer support, marketing automation, WhatsApp & Facebook Automation for businesses. AI-powered No-Code chatbot maker with live chat plugin & ChatGPT integration.\nMobile app\niOS App\nAndroid App\nFully Operational\nStatus\nMobile app\niOS App\nAndroid App\nFully Operational\nStatus\nPlatforms\nMicrosoft Teams\nNew\nInstagram\nNew\nWhatsapp\nTelegram\nFacebook\nWebsites\nPartners\nWhitelabel Partner\nWhatsapp Whitelabel Partner\nImplementation Partner\nAffiliate Partner\nGet Started\nChatbot For Ecommerce\nChatbot For Real Estate\nChatbot For Education\nChatbot For Travel\nAll Templates\nFree Tools\nWhatsApp Link Generator\nWhatsApp QR Code Generator\nOpenAI API Pricing Calculator\nChatbot ROI Calculator\nAll Free Tools\nIntegrations\nChatGPT\nGoHighLevel\nBitrix 24\nZoho CRM\nZapier\nAll Integrations\nResources\nBlogs\nGlossary\nHelp Center\nWrite for us\nContact Us\nWhat\u2019s New\nProduct Updates\nComparisons\nBotPenguin vs Manychat\nBotPenguin vs Tidio\nBotPenguin vs Tawk.to\nBotPenguin vs Wati\nBotPenguin vs Landbot\nAll Comparisons\nAlternatives\nWhat you get\nLead Generation Bot\nSupport Bot\nAssistant Bot\nPlatforms\nMicrosoft Teams\nNew\nInstagram\nNew\nWhatsapp\nTelegram\nFacebook\nWebsites\nGet Started\nIntegrations\nComparisons\nPartners\nFree Tools\nResources\nWhat you get\nTerms & Conditions\nPrivacy Policy\nSecurity\nGDPR\nRefund Policy\nTerms & Conditions\nPrivacy Policy\nSecurity\nGDPR\nRefund Policy\nCopyright \u00a9 2018 - 2024 Relinns Technologies Pvt. Ltd. All RightsReserved.", "embedding": [-0.10842970758676529, -0.069026418030262, 0.024758968502283096, 0.02624477818608284, -0.019056718796491623, -0.03662807494401932, 0.044420026242733, 0.07955353707075119, -0.011620106175541878, 0.011091530323028564, 0.0404568575322628, -0.009823782369494438, 0.013201167806982994, 0.035226237028837204, 0.09749855846166611, 0.00728614442050457, 0.1145448386669159, -0.09507567435503006, -0.08333628624677658, -0.020569581538438797, -0.015111911110579967, -0.02463040128350258, 0.03607241436839104, -0.027129413560032845, -0.03294137492775917, -0.05527486279606819, -0.03882107883691788, -0.007114164065569639, 0.0001853898138506338, -0.08295148611068726, -1.680377636148478e-06, 0.012911234050989151, -0.014056793414056301, 0.049900222569704056, -0.022346075624227524, -0.057866018265485764, -0.015791669487953186, 0.01670265384018421, 0.08229159563779831, -0.04970967024564743, -0.0720217302441597, -0.08360389620065689, -0.05355410277843475, -0.003157531376928091, 0.0837477445602417, -0.0010753916576504707, -0.061601459980010986, 0.026882490143179893, -2.287034658365883e-05, 0.09100919216871262, -0.09759774059057236, -0.04723086208105087, 0.040905483067035675, 0.03853697329759598, -0.03168537840247154, 0.04438871145248413, -0.026767320930957794, 0.015758590772747993, 0.0443846620619297, -0.002943648723885417, -0.026005325838923454, -0.002631525509059429, 0.059160199016332626, 0.03627147525548935, -0.02739330381155014, 0.03119189478456974, -0.10895650088787079, 0.012615530751645565, 0.0011951022315770388, -0.019974790513515472, -0.02314801514148712, -0.016869070008397102, -0.04725705459713936, 0.0640399381518364, 0.013981903903186321, -0.031246230006217957, 0.002409609267488122, -0.005745862144976854, 0.01737038604915142, -0.04817485809326172, -0.015117879956960678, 0.05311628803610802, -0.014879204332828522, 0.042327914386987686, -0.02786620520055294, -0.025377504527568817, -0.006053564138710499, 0.028559325262904167, -0.01883147656917572, -0.005282724741846323, 0.045038893818855286, 0.007791453972458839, 0.036378130316734314, 0.00343413557857275, 0.03700163587927818, 0.01125936396420002, -0.05825595557689667, 0.015422503463923931, -0.051262594759464264, -0.010771709494292736, -1.565822822158225e-05, -0.028865691274404526, -0.05363810434937477, -0.06734351068735123, -0.04410126805305481, 0.003992804791778326, 0.05987080559134483, -0.009396558627486229, 0.13586470484733582, 0.005025780294090509, -0.12900091707706451, -0.06273067742586136, -0.0039047321770340204, -0.035650696605443954, -0.008891681209206581, 0.01875343546271324, -0.04822650924324989, 0.05918298289179802, 0.16049852967262268, 0.014111917465925217, 0.07309971749782562, 0.05417200177907944, 0.010242030955851078, -0.01553646381944418, 0.05005798116326332, 0.025812065228819847, 0.012836071662604809, 1.0798010291416914e-32, -0.020202815532684326, 0.024469688534736633, -0.07075134664773941, 0.08901750296354294, 0.03176631033420563, 0.015551676042377949, 0.018362293019890785, 0.048957958817481995, -0.08015410602092743, -0.03443359211087227, -0.10761874169111252, 0.11628283560276031, -0.08196283131837845, 0.040892425924539566, 0.0342545248568058, -0.08988957107067108, -0.01337218377739191, 0.029271671548485756, 0.0430927649140358, -0.005468044430017471, 0.08339560031890869, -0.02544034831225872, 0.06374278664588928, 0.07145996391773224, 0.133318230509758, 0.040083032101392746, 0.07742638140916824, 0.02959892340004444, 0.04827949404716492, 0.03448212146759033, -0.08366269618272781, 0.0013342361198738217, -0.0631878525018692, 0.024575691670179367, -0.04058648645877838, -0.052155062556266785, -0.058076176792383194, -0.11268439143896103, -0.07560686022043228, 0.03678495064377785, -0.1298753023147583, -0.0031585139222443104, -0.10473643243312836, -0.06670903414487839, 0.01792425476014614, 0.020345335826277733, 0.030247505754232407, 0.02256373129785061, 0.005067260004580021, 0.026656081900000572, -0.04331669211387634, 0.025961467996239662, 0.02666395902633667, 0.049882031977176666, -0.005819569807499647, -0.046082571148872375, 0.005125014577060938, -0.04512952268123627, -0.004177524242550135, -0.02302919328212738, -0.008629576303064823, -0.02671698108315468, -0.010989692993462086, -0.026386888697743416, 0.05535752698779106, 0.0175790935754776, 0.06058796867728233, 0.022108977660536766, 0.03685884177684784, 0.022515492513775826, 0.057499904185533524, 0.043364617973566055, -0.0042733438313007355, 0.026620982214808464, -0.035018522292375565, 0.002183943521231413, -0.11636290699243546, 0.02485172636806965, -0.06516550481319427, -0.008468965999782085, -0.03642495349049568, -0.014568091370165348, -0.019504202529788017, -0.020369824022054672, 0.07617874443531036, -0.03398758918046951, 0.035413239151239395, -0.056468416005373, -0.033895958214998245, 0.029239265248179436, -0.03245779499411583, 0.07732367515563965, -0.059744443744421005, 0.0800725445151329, -0.0317598432302475, -8.641001667545033e-33, -0.03699381276965141, 0.016972946003079414, -0.04497556760907173, 0.08234787732362747, 0.0027556249406188726, -0.024470297619700432, 0.033869437873363495, -0.03510225564241409, 0.09984627366065979, -0.004205527249723673, -0.10437407344579697, -0.01809667982161045, 0.009534315206110477, -0.03532828018069267, -0.015044810250401497, 0.027325093746185303, -0.06377170979976654, -0.040339235216379166, 0.020479202270507812, 0.02571745216846466, -0.008936374448239803, 0.05869469791650772, -0.12049493193626404, -0.0011711280094459653, 0.0034368932247161865, 0.046171993017196655, -0.056875284761190414, 0.045986469835042953, 0.018921276554465294, 0.014362200163304806, -0.022173240780830383, 7.497311162296683e-05, -0.03734623268246651, -0.008634255267679691, 0.020314374938607216, 0.06732989847660065, 0.017794622108340263, -0.01384708285331726, 0.0022975702304393053, -0.04686016961932182, 0.09918961673974991, -0.05284620448946953, -0.03313048556447029, -0.07441948354244232, 0.004169913474470377, 0.0335061177611351, -0.15606383979320526, -0.031886253505945206, -0.06378580629825592, 0.047107238322496414, 0.05998484790325165, 0.004135292489081621, 0.03435998037457466, -0.05092702433466911, -0.09542958438396454, -0.027724741026759148, 0.08303752541542053, 0.01574769616127014, -0.09207563102245331, 0.03680683299899101, 0.03541972115635872, -0.010000709444284439, 0.0681789368391037, 0.0956922397017479, 0.04264940693974495, -0.01787460409104824, 0.06091226264834404, 0.01580696552991867, -0.007024367805570364, -0.08877138793468475, 0.044048208743333817, -0.05989951267838478, -0.008035611361265182, -0.006513735745102167, 0.02277449518442154, 0.07375842332839966, 0.03295820951461792, -0.10633150488138199, 0.010501796379685402, -0.02708706259727478, -0.07065609097480774, 0.0011764656519517303, 0.06526689231395721, 0.02623768337070942, -0.09688012301921844, 0.05491078272461891, -0.038232941180467606, 0.028352877125144005, 0.007745832670480013, 0.02134757675230503, -0.0318719781935215, 0.010285994037985802, -0.03143266215920448, 0.10840696841478348, -0.006653000134974718, -5.910371925210711e-08, -0.016164634376764297, 0.013353003188967705, 0.05604657158255577, 0.04944198206067085, 0.04425106197595596, -0.04657335951924324, -0.028522152453660965, 0.08377275615930557, 0.017508134245872498, 0.035695504397153854, 0.023618511855602264, -0.03574559465050697, -0.05076286196708679, 0.08733004331588745, 0.05856240540742874, -0.0020803813822567463, -0.041387658566236496, -0.021763361990451813, 0.011424518190324306, -0.03478370979428291, 0.06127433478832245, 0.016744490712881088, -0.03232165798544884, -0.013352888636291027, 0.012444651685655117, -0.06786523014307022, -0.060706254094839096, 0.08682038635015488, -0.039298590272665024, -0.00437527010217309, -0.017132923007011414, -0.022515228018164635, 0.0542929545044899, -0.03806711733341217, -0.016818221658468246, 0.008790808729827404, -0.08302906155586243, -0.08132217079401016, 0.0007217958918772638, 0.05206301808357239, 0.02218800038099289, 0.03224578872323036, 0.015400788746774197, -0.0805865079164505, -0.011983243748545647, -0.04752730950713158, -0.07264288514852524, -0.11416899412870407, 0.041843198239803314, -0.00044113287003710866, -0.06544145196676254, 0.0007552040042355657, 0.056797489523887634, 0.0323013998568058, 0.09546824544668198, -0.006214694119989872, 0.07086378335952759, -0.0004876174498349428, 0.09055297076702118, 0.11755557358264923, 0.03153408318758011, 0.024027902632951736, 0.03211924061179161, 0.031618356704711914]}